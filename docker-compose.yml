version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: rotation_user
      POSTGRES_PASSWORD: rotation_pass
      POSTGRES_DB: banner_rotation
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  zookeeper:
    image: bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_MAX_CLIENT_CNXNS: 1000
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CREATE_TOPICS: "banner_events:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 20s
      timeout: 10s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_URL: postgres://rotation_user:rotation_pass@postgres:5432/banner_rotation?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: banner_events
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"

  tests:
    image: golang:1.23-alpine
    volumes:
      - .:/app
    working_dir: /app
    environment:
      DB_URL: postgres://rotation_user:rotation_pass@postgres:5432/banner_rotation?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: banner_events
      WAIT_HOSTS: postgres:5432,kafka:9092
      WAIT_HOSTS_TIMEOUT: 300
    command: sh -c "
      while ! nc -z postgres 5432; do sleep 1; done &&
      while ! nc -z kafka 9092; do sleep 1; done &&
      go test -v ./internal/... "
    
    depends_on:
      - postgres
      - kafka

volumes:
  postgres_data: