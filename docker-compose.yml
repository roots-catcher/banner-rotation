version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: rotation_user
      POSTGRES_PASSWORD: rotation_pass
      POSTGRES_DB: banner_rotation
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      postgres:
        condition: service_healthy

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_URL: postgres://rotation_user:rotation_pass@postgres:5432/banner_rotation?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: banner_events
    depends_on:
      - postgres
      - kafka
    ports:
      - "8080:8080"

volumes:
  postgres_data: