name: CI Pipeline

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      zookeeper:
        image: bitnami/zookeeper:latest
        env:
          ALLOW_ANONYMOUS_LOGIN: "yes"
        ports:
          - 2181:2181
      
      kafka:
        image: wurstmeister/kafka:latest
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_CREATE_TOPICS: "banner_events:1:1"
        ports:
          - 9092:9092

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.58.0
        
    - name: Run linter
      run: golangci-lint run
      
    - name: Wait for services
      run: |
        echo "Waiting for services to be ready..."
        while ! nc -z localhost 5432; do sleep 1; done
        while ! nc -z localhost 2181; do sleep 1; done
        while ! nc -z localhost 9092; do sleep 1; done
        echo "All services are ready!"
      
    - name: Run tests
      env:
        DB_URL: "postgres://test_user:test_pass@localhost:5432/test_db?sslmode=disable"
        KAFKA_BROKERS: "localhost:9092"
        KAFKA_TOPIC: "banner_events"
      run: |
        go test -race -count=100 -v ./...
      
    - name: Build
      run: go build -o banner-rotation ./cmd